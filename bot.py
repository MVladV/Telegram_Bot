import telebot
import config


from telebot import types

bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('static/welcome.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)
 
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üí™ –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è")
    item2 = types.KeyboardButton("üí§ –°–æ–Ω")
 
    markup.add(item1, item2)
 
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –¥–æ–ø–æ–º–∞–≥–∞—Ç–∏ –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –∑–¥–æ—Ä–æ–≤–æ–≥–æ —Å–ø–æ—Å–æ–±—É –∂–∏—Ç—Ç—è.".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def lalala(message):
    global name 
    name = message.from_user.first_name

    if message.chat.type == 'private':
        if message.text == 'üìí –ë–ª–æ–∫–Ω–æ—Ç':
            with open("parameters.json", "r") as read_f:
                try:
                    data = json.load(read_f)
                except Exception as e:
                    data = []
            read_f.close()
            exists=False
            if len(data)!=0:
                for user in data:
                    if user['Name'] == name:
                        exists=True
            if not exists:

                bot.send_message(message.chat.id, "–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ –¥–∞–Ω—ñ:")

                markup = types.InlineKeyboardMarkup(row_width=2)
                item1 = types.InlineKeyboardButton("–ß–æ–ª–æ–≤—ñ–∫", callback_data='sex1')
                item2 = types.InlineKeyboardButton("–ñ—ñ–Ω–∫–∞", callback_data='sex2') 
                markup.add(item1, item2)
     
                bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—å.', reply_markup=markup) 

                markup1 = types.InlineKeyboardMarkup(row_width=2)
                item1 = types.InlineKeyboardButton("14-16", callback_data='age1')
                item2 = types.InlineKeyboardButton("16-18", callback_data='age2') 
                item3 = types.InlineKeyboardButton("18-24", callback_data='age3') 
                item4 = types.InlineKeyboardButton("24-30", callback_data='age4') 
                markup1.add(item1, item2, item3, item4)
     
                bot.send_message(message.chat.id, '–í–∫–∞–∂—ñ—Ç—å –í–∞—à –≤—ñ–∫', reply_markup=markup1) 

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'biceps':
                bot.send_message(call.message.chat.id, '–†–æ–∑–º–∏–Ω–∫–∞, —Ç–∞ 10 –≤—ñ–¥–∂–∏–º–∞–Ω–Ω—å')
            elif call.data == 'legs':
                bot.send_message(call.message.chat.id, '–†–æ–∑–º–∏–Ω–∫–∞ —Ç–∞ 20 –ø—Ä–∏—Å—ñ–¥–∞–Ω—å')
 
            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üí™ –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è",
                reply_markup=None)
 
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")
 
    except Exception as e:
        print(repr(e))
 
# RUN
bot.polling(none_stop=True)
